@page "/chart/edit/{id:int}"

<div class="container bg-white rounded border p-3">
    <div class="pl-3">
        <div class="row">
            <span style="font-size:18px; color:#8f8f8f;"><a href="/chart" style="color:#6372C4">Charts</a>  /  @id</span>
        </div>
        <div class="row pt-4">
            <button class="btn btn-primary" type="submit" @onclick=@(()=> Save()) style="background-color:#6372C4"><i class="far fa-save"></i> Save</button>
            <a class="btn border ml-1" href="/chart/@id"><i class="fas fa-undo"></i> Cancel</a>
        </div>
    </div>
</div>

<div class="container bg-white border box-shadow p-3 rounded">
    <ChartForm ChartVM="ChartVM" ecb_Save="Update" Type="Edit" @ref="Form"/>
</div>

    @code {

        [Inject] public IChartService ChartService { get; set; }
        [Inject] public IJSRuntime JSRuntime { get; set; }
        [Inject] NavigationManager NavigationManager { get; set; }
        [Parameter] public int id { get; set; }

        ChartVM ChartVM { get; set; } = new ChartVM();
        protected ChartForm Form;

        protected override async Task OnInitializedAsync()
        {
            ChartVM = await ChartService.GetChart(id);
        }

        private async Task Save()
        {
            await Form.ParentSubmit();
        }

        private async Task Update()
        {
            ChartVM.Exception = null;
            ChartVM updatedChartVM = await ChartService.UpdateChart(ChartVM.Chart.Id, ChartVM);

            if (string.IsNullOrEmpty(updatedChartVM.Exception))
            {
                await JSRuntime.Notfication($"Chartment {ChartVM.Chart.Name} has been updated successfully!", IJSRuntimeExtensionMethods.SweetAlertMessageType.success, 3000);
                NavigationManager.NavigateTo($"/chart/{updatedChartVM.Chart.Id}");
            }
            else
            {
                await JSRuntime.Notfication(updatedChartVM.Exception, IJSRuntimeExtensionMethods.SweetAlertMessageType.error, 10000);
            }
        }
    }
